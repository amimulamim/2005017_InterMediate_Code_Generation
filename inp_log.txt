Line# 1: Token <INT> Lexeme int found
type_specifier	: INT 
Line# 1: Token <ID> Lexeme a found
Line# 1: Token <COMMA> Lexeme , found
declaration_list : ID 
Line# 1: Token <ID> Lexeme b found
Line# 1: Token <LSQUARE> Lexeme [ found
Line# 1: Token <CONST_INT> Lexeme 9 found
Line# 1: Token <RSQUARE> Lexeme ] found
declaration_list : declaration_list COMMA ID LSQUARE CONST_INT RSQUARE 
Line# 1: Token <SEMICOLON> Lexeme ; found
var_declaration : type_specifier declaration_list SEMICOLON  
unit : var_declaration  
program : unit 
Line# 2: Token <VOID> Lexeme void found
type_specifier	: VOID
Line# 2: Token <ID> Lexeme f found
Line# 2: Token <LPAREN> Lexeme ( found
Line# 2: Token <RPAREN> Lexeme ) found
Line# 2: Token <LCURL> Lexeme { found
Line# 4: Token <RCURL> Lexeme } found
compound_statement : LCURL RCURL 
	ScopeTable# 2
	ScopeTable# 1
	10--> <a,INT> 
	11--> <b,ARRAY> 
func_definition : type_specifier ID LPAREN RPAREN compound_statement
unit : func_definition 
program : program unit 
Line# 6: Token <VOID> Lexeme void found
type_specifier	: VOID
Line# 6: Token <ID> Lexeme main found
Line# 6: Token <LPAREN> Lexeme ( found
Line# 6: Token <RPAREN> Lexeme ) found
Line# 6: Token <LCURL> Lexeme { found
Line# 7: Token <INT> Lexeme int found
type_specifier	: INT 
Line# 7: Token <ID> Lexeme c found
Line# 7: Token <COMMA> Lexeme , found
declaration_list : ID 
Line# 7: Token <ID> Lexeme d found
Line# 7: Token <LSQUARE> Lexeme [ found
Line# 7: Token <CONST_INT> Lexeme 5 found
Line# 7: Token <RSQUARE> Lexeme ] found
declaration_list : declaration_list COMMA ID LSQUARE CONST_INT RSQUARE 
Line# 7: Token <SEMICOLON> Lexeme ; found
var_declaration : type_specifier declaration_list SEMICOLON  
statement : var_declaration
statements : statement  
Line# 9: Token <ID> Lexeme c found
Line# 9: Token <INCOP> Lexeme ++ found
variable : ID 	 
factor : variable INCOP 
unary_expression : factor 
term :	unary_expression 
Line# 9: Token <SEMICOLON> Lexeme ; found
simple_expression : term 
rel_expression	: simple_expression 
logic_expression : rel_expression 	 
expression 	: logic_expression	 
expression_statement : expression SEMICOLON
statement : expression_statement
statements : statements statement 
Line# 10: Token <ID> Lexeme g1 found
Line# 10: Token <SEMICOLON> Lexeme ; found
variable : ID 	 
factor	: variable 
unary_expression : factor 
term :	unary_expression 
simple_expression : term 
rel_expression	: simple_expression 
logic_expression : rel_expression 	 
expression 	: logic_expression	 
expression_statement : expression SEMICOLON
statement : expression_statement
statements : statements statement 
Line# 11: Token <PRINTLN> Lexeme println found
Line# 11: Token <LPAREN> Lexeme ( found
Line# 11: Token <ID> Lexeme c found
Line# 11: Token <RPAREN> Lexeme ) found
Line# 11: Token <SEMICOLON> Lexeme ; found
statement : PRINTLN LPAREN ID RPAREN SEMICOLON
statements : statements statement 
Line# 12: Token <ID> Lexeme d found
Line# 12: Token <LSQUARE> Lexeme [ found
Line# 12: Token <CONST_INT> Lexeme 2 found
factor : CONST_INT
unary_expression : factor 
term :	unary_expression 
Line# 12: Token <RSQUARE> Lexeme ] found
simple_expression : term 
rel_expression	: simple_expression 
logic_expression : rel_expression 	 
expression 	: logic_expression	 
variable : ID LSQUARE expression RSQUARE
Line# 12: Token <SEMICOLON> Lexeme ; found
factor	: variable 
unary_expression : factor 
term :	unary_expression 
simple_expression : term 
rel_expression	: simple_expression 
logic_expression : rel_expression 	 
expression 	: logic_expression	 
expression_statement : expression SEMICOLON
statement : expression_statement
statements : statements statement 
Line# 13: Token <CONST_INT> Lexeme 10 found
factor : CONST_INT
unary_expression : factor 
term :	unary_expression 
Line# 13: Token <SEMICOLON> Lexeme ; found
simple_expression : term 
rel_expression	: simple_expression 
logic_expression : rel_expression 	 
expression 	: logic_expression	 
expression_statement : expression SEMICOLON
statement : expression_statement
statements : statements statement 
Line# 14: Token <ID> Lexeme f found
Line# 14: Token <LPAREN> Lexeme ( found
Line# 14: Token <RPAREN> Lexeme ) found
argument_list : 
factor : ID LPAREN argument_list RPAREN
unary_expression : factor 
term :	unary_expression 
Line# 14: Token <SEMICOLON> Lexeme ; found
simple_expression : term 
rel_expression	: simple_expression 
logic_expression : rel_expression 	 
expression 	: logic_expression	 
expression_statement : expression SEMICOLON
statement : expression_statement
statements : statements statement 
Line# 17: Token <RCURL> Lexeme } found
compound_statement : LCURL statements RCURL  
	ScopeTable# 3
	1--> <c,INT> 
	2--> <d,ARRAY> 
	ScopeTable# 1
	4--> <f,FUNCTION,VOID> 
	10--> <a,INT> 
	11--> <b,ARRAY> 
func_definition : type_specifier ID LPAREN RPAREN compound_statement
unit : func_definition 
program : program unit 
Line# 18: Token <INT> Lexeme int found
type_specifier	: INT 
Line# 18: Token <ID> Lexeme g1 found
Line# 18: Token <COMMA> Lexeme , found
declaration_list : ID 
Line# 18: Token <ID> Lexeme g2 found
Line# 18: Token <SEMICOLON> Lexeme ; found
declaration_list : declaration_list COMMA ID  
var_declaration : type_specifier declaration_list SEMICOLON  
unit : var_declaration  
program : program unit 
start : program
Total Lines: 24
Total Errors: 1
